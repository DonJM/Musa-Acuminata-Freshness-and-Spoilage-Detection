{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T16:24:37.055269Z\",\"iopub.execute_input\":\"2021-07-23T16:24:37.055785Z\",\"iopub.status.idle\":\"2021-07-23T16:24:37.069269Z\",\"shell.execute_reply.started\":\"2021-07-23T16:24:37.055683Z\",\"shell.execute_reply\":\"2021-07-23T16:24:37.067618Z\"}}\n#importing libraries for file manipulation\nimport os, shutil\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T16:24:39.573255Z\",\"iopub.execute_input\":\"2021-07-23T16:24:39.573687Z\",\"iopub.status.idle\":\"2021-07-23T16:24:39.580073Z\",\"shell.execute_reply.started\":\"2021-07-23T16:24:39.573656Z\",\"shell.execute_reply\":\"2021-07-23T16:24:39.578773Z\"}}\n#acquiring the directories of original dataset\noriginal_datasets = '../input/fresh-vs-rotten-musa-acuminata/train'\n\n#making new base directories\nbase_dir = './Fresh_Vs_Rotten_Banana'\nos.mkdir(base_dir)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T16:24:40.716512Z\",\"iopub.execute_input\":\"2021-07-23T16:24:40.716938Z\",\"iopub.status.idle\":\"2021-07-23T16:24:40.724780Z\",\"shell.execute_reply.started\":\"2021-07-23T16:24:40.716904Z\",\"shell.execute_reply\":\"2021-07-23T16:24:40.723438Z\"}}\n#creating a list of lists for train, test, and validation\nsub_dirs = ['training', 'testing', 'validation']\n\n#looping them and making directories out of it\nfor sub_dir in sub_dirs:\n    sub_path = os.path.join(base_dir, sub_dir)\n    os.mkdir(sub_path)\n    classifies = ['fresh', 'rotten']\n    \n    for classify in classifies:\n        class_path = os.path.join(sub_path, classify)\n        os.mkdir(class_path)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T16:24:42.592386Z\",\"iopub.execute_input\":\"2021-07-23T16:24:42.592875Z\",\"iopub.status.idle\":\"2021-07-23T16:25:49.928758Z\",\"shell.execute_reply.started\":\"2021-07-23T16:24:42.592834Z\",\"shell.execute_reply\":\"2021-07-23T16:25:49.927507Z\"}}\n#copying files for fresh bananas\nfiles = ['Fresh.{}.jpg'.format(i) for i in range(4000)]\n\nfor file in files:\n    src = os.path.join(original_datasets, file)\n    dst = os.path.join(base_dir + '/training/fresh', file)\n    shutil.copyfile(src, dst)\n    \nfiles = ['Fresh.{}.jpg'.format(i) for i in range(4000, 5000)]\n\nfor file in files:\n    src = os.path.join(original_datasets, file)\n    dst = os.path.join(base_dir + '/testing/fresh', file)\n    shutil.copyfile(src, dst)\n    \nfiles = ['Fresh.{}.jpg'.format(i) for i in range(5000, 6000)]\n\nfor file in files:\n    src = os.path.join(original_datasets, file)\n    dst = os.path.join(base_dir + '/validation/fresh', file)\n    shutil.copyfile(src, dst)\n\n#copying files for rotten bananas\nfiles = ['Rotten.{}.jpg'.format(i) for i in range(4000)]\n\nfor file in files:\n    src = os.path.join(original_datasets, file)\n    dst = os.path.join(base_dir + '/training/rotten', file)\n    shutil.copyfile(src, dst)\n    \nfiles = ['Rotten.{}.jpg'.format(i) for i in range(4000, 5000)]\n\nfor file in files:\n    src = os.path.join(original_datasets, file)\n    dst = os.path.join(base_dir + '/testing/rotten', file)\n    shutil.copyfile(src, dst)\n    \nfiles = ['Rotten.{}.jpg'.format(i) for i in range(5000, 6000)]\n\nfor file in files:\n    src = os.path.join(original_datasets, file)\n    dst = os.path.join(base_dir + '/validation/rotten', file)\n    shutil.copyfile(src, dst)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T16:26:48.935538Z\",\"iopub.execute_input\":\"2021-07-23T16:26:48.935918Z\",\"iopub.status.idle\":\"2021-07-23T16:26:48.948365Z\",\"shell.execute_reply.started\":\"2021-07-23T16:26:48.935886Z\",\"shell.execute_reply\":\"2021-07-23T16:26:48.947031Z\"}}\nlen(os.listdir('./Fresh_Vs_Rotten_Banana/training/fresh')) + len(os.listdir('./Fresh_Vs_Rotten_Banana/testing/fresh')) + len(os.listdir('./Fresh_Vs_Rotten_Banana/validation/fresh'))\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T16:29:10.991938Z\",\"iopub.execute_input\":\"2021-07-23T16:29:10.992317Z\",\"iopub.status.idle\":\"2021-07-23T16:29:11.000689Z\",\"shell.execute_reply.started\":\"2021-07-23T16:29:10.992285Z\",\"shell.execute_reply\":\"2021-07-23T16:29:10.999500Z\"}}\nfrom keras import layers\nfrom keras import models\nfrom keras import optimizers\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T16:44:22.116304Z\",\"iopub.execute_input\":\"2021-07-23T16:44:22.116710Z\",\"iopub.status.idle\":\"2021-07-23T16:44:22.128043Z\",\"shell.execute_reply.started\":\"2021-07-23T16:44:22.116677Z\",\"shell.execute_reply\":\"2021-07-23T16:44:22.126550Z\"}}\ndef model():\n    model = models.Sequential()\n    model.add(layers.Conv2D(32, (3, 3), activation='relu', input_shape=(150, 150, 3)))\n    model.add(layers.MaxPooling2D((2, 2)))\n    model.add(layers.Conv2D(64, (3, 3), activation='relu'))\n    model.add(layers.MaxPooling2D(2, 2))\n    model.add(layers.Conv2D(128, (3, 3), activation='relu'))\n    model.add(layers.MaxPooling2D((2, 2)))\n    model.add(layers.Conv2D(128, (3, 3), activation='relu'))\n    model.add(layers.MaxPooling2D((2, 2)))\n    model.add(layers.Flatten())\n    model.add(layers.Dense(512, activation='relu'))\n    model.add(layers.Dense(1, activation='sigmoid'))\n    model.compile(loss='binary_crossentropy', optimizer=optimizers.RMSprop(lr=2e-5), metrics=['accuracy'])\n    return model\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T16:44:24.217270Z\",\"iopub.execute_input\":\"2021-07-23T16:44:24.217678Z\",\"iopub.status.idle\":\"2021-07-23T16:44:24.318042Z\",\"shell.execute_reply.started\":\"2021-07-23T16:44:24.217634Z\",\"shell.execute_reply\":\"2021-07-23T16:44:24.316339Z\"}}\nmodel = model()\nmodel.summary()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T16:35:48.095776Z\",\"iopub.execute_input\":\"2021-07-23T16:35:48.096119Z\",\"iopub.status.idle\":\"2021-07-23T16:35:48.103268Z\",\"shell.execute_reply.started\":\"2021-07-23T16:35:48.096088Z\",\"shell.execute_reply\":\"2021-07-23T16:35:48.102083Z\"}}\nfrom keras.preprocessing.image import ImageDataGenerator\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T16:59:37.349793Z\",\"iopub.execute_input\":\"2021-07-23T16:59:37.350145Z\",\"iopub.status.idle\":\"2021-07-23T16:59:38.308513Z\",\"shell.execute_reply.started\":\"2021-07-23T16:59:37.350112Z\",\"shell.execute_reply\":\"2021-07-23T16:59:38.307359Z\"}}\ntraining_datagen = ImageDataGenerator(\n    rescale=1./255,\n    rotation_range = 40,\n    width_shift_range = 0.2,\n    height_shift_range = 0.2,\n    shear_range = 0.2,\n    zoom_range = 0.2,\n    horizontal_flip = True,\n    fill_mode = 'nearest')\n\ntesting_datagen = ImageDataGenerator(\n    rescale=1./255)\n\nvalidation_datagen = ImageDataGenerator(\n    rescale=1./255)\n\ntraining_generator = training_datagen.flow_from_directory(\n    './Fresh_Vs_Rotten_Banana/training',\n    target_size = (150, 150),\n    batch_size=20,\n    class_mode='binary')\n\ntesting_generator = testing_datagen.flow_from_directory(\n    './Fresh_Vs_Rotten_Banana/testing',\n    target_size = (150, 150),\n    batch_size = 20,\n    class_mode = 'binary')\n\nvalidation_generator = validation_datagen.flow_from_directory(\n    './Fresh_Vs_Rotten_Banana/validation',\n    target_size = (150, 150),\n    batch_size = 20,\n    class_mode = 'binary'\n    )\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T16:59:42.115608Z\",\"iopub.execute_input\":\"2021-07-23T16:59:42.116032Z\",\"iopub.status.idle\":\"2021-07-23T17:21:40.784703Z\",\"shell.execute_reply.started\":\"2021-07-23T16:59:42.115997Z\",\"shell.execute_reply\":\"2021-07-23T17:21:40.783652Z\"}}\nhistory = model.fit_generator(\n    training_generator,\n    steps_per_epoch = len(training_generator),\n    epochs = 20,\n    validation_data = validation_generator,\n    validation_steps = len(validation_generator))\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T17:21:40.787009Z\",\"iopub.execute_input\":\"2021-07-23T17:21:40.787477Z\",\"iopub.status.idle\":\"2021-07-23T17:21:40.793106Z\",\"shell.execute_reply.started\":\"2021-07-23T17:21:40.787399Z\",\"shell.execute_reply\":\"2021-07-23T17:21:40.791494Z\"}}\nimport matplotlib.pyplot as plt\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T17:21:45.268426Z\",\"iopub.execute_input\":\"2021-07-23T17:21:45.268871Z\",\"iopub.status.idle\":\"2021-07-23T17:21:45.277231Z\",\"shell.execute_reply.started\":\"2021-07-23T17:21:45.268838Z\",\"shell.execute_reply\":\"2021-07-23T17:21:45.275905Z\"}}\nloss = history.history['loss']\nval_loss = history.history['val_loss']\naccuracy = history.history['accuracy']\nval_accuracy = history.history['val_accuracy']\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T17:21:46.343190Z\",\"iopub.execute_input\":\"2021-07-23T17:21:46.343566Z\",\"iopub.status.idle\":\"2021-07-23T17:21:46.526633Z\",\"shell.execute_reply.started\":\"2021-07-23T17:21:46.343534Z\",\"shell.execute_reply\":\"2021-07-23T17:21:46.525206Z\"}}\nplt.plot(loss, 'bo', label='Training Loss')\nplt.plot(val_loss, 'b', label='Validation Loss')\nplt.xlabel('Epochs')\nplt.ylabel('Losses')\nplt.title('Training and Validation Loss')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T17:21:50.137808Z\",\"iopub.execute_input\":\"2021-07-23T17:21:50.138187Z\",\"iopub.status.idle\":\"2021-07-23T17:21:50.340620Z\",\"shell.execute_reply.started\":\"2021-07-23T17:21:50.138154Z\",\"shell.execute_reply\":\"2021-07-23T17:21:50.339234Z\"}}\nplt.plot(accuracy, 'bo', label='Training Accuracy')\nplt.plot(val_accuracy, 'b', label='Validation Accuracy')\nplt.xlabel('Epochs')\nplt.ylabel('Accuracies')\nplt.title('Training and Validation Accuracy')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T17:21:59.699259Z\",\"iopub.execute_input\":\"2021-07-23T17:21:59.699651Z\",\"iopub.status.idle\":\"2021-07-23T17:22:04.324012Z\",\"shell.execute_reply.started\":\"2021-07-23T17:21:59.699618Z\",\"shell.execute_reply\":\"2021-07-23T17:22:04.322849Z\"}}\n__, accuracy = model.evaluate_generator(testing_generator)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T17:59:39.283890Z\",\"iopub.execute_input\":\"2021-07-23T17:59:39.284371Z\",\"iopub.status.idle\":\"2021-07-23T17:59:39.292116Z\",\"shell.execute_reply.started\":\"2021-07-23T17:59:39.284321Z\",\"shell.execute_reply\":\"2021-07-23T17:59:39.290802Z\"}}\nprint('Loss: {}'.format(round(__, 4)), 'Accuracy: {}%'.format(round(accuracy * 100, 2)))\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T17:22:39.094975Z\",\"iopub.execute_input\":\"2021-07-23T17:22:39.095365Z\",\"iopub.status.idle\":\"2021-07-23T17:22:39.182473Z\",\"shell.execute_reply.started\":\"2021-07-23T17:22:39.095332Z\",\"shell.execute_reply\":\"2021-07-23T17:22:39.181298Z\"}}\nmodel.save('fresh_vs_rotten_banana_v2.h5')\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T17:42:00.547180Z\",\"iopub.execute_input\":\"2021-07-23T17:42:00.547561Z\",\"iopub.status.idle\":\"2021-07-23T17:42:00.555139Z\",\"shell.execute_reply.started\":\"2021-07-23T17:42:00.547531Z\",\"shell.execute_reply\":\"2021-07-23T17:42:00.551577Z\"}}\nfrom keras.models import load_model\nfrom keras.preprocessing import image\nfrom matplotlib.image import imread\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T17:33:57.164648Z\",\"iopub.execute_input\":\"2021-07-23T17:33:57.165085Z\",\"iopub.status.idle\":\"2021-07-23T17:33:57.171799Z\",\"shell.execute_reply.started\":\"2021-07-23T17:33:57.165052Z\",\"shell.execute_reply\":\"2021-07-23T17:33:57.170001Z\"}}\ndef load_image(path):\n    file = image.load_img(path, target_size=(150, 150))\n    file = image.img_to_array(file)\n    img = file.reshape((1, 150, 150, 3))\n    img = img.astype('float32')\n    \n    return img\n    \n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T17:53:25.222882Z\",\"iopub.execute_input\":\"2021-07-23T17:53:25.223259Z\",\"iopub.status.idle\":\"2021-07-23T17:53:25.231401Z\",\"shell.execute_reply.started\":\"2021-07-23T17:53:25.223227Z\",\"shell.execute_reply\":\"2021-07-23T17:53:25.229758Z\"}}\ndef predict(path):\n    model = load_model('./fresh_vs_rotten_banana_v2.h5')\n    img = load_image(path)\n    result = model.predict(img)\n    \n    if result == 0:\n        return \"Fresh\"\n    elif result == 1:\n        return \"Rotten\"\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T17:36:49.375653Z\",\"iopub.execute_input\":\"2021-07-23T17:36:49.376010Z\",\"iopub.status.idle\":\"2021-07-23T17:36:49.391025Z\",\"shell.execute_reply.started\":\"2021-07-23T17:36:49.375980Z\",\"shell.execute_reply\":\"2021-07-23T17:36:49.389920Z\"}}\npaths = [os.path.join('../input/fresh-vs-rotten-bananatest/Train', i) for i in os.listdir('../input/fresh-vs-rotten-bananatest/Train')]\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T17:53:29.011350Z\",\"iopub.execute_input\":\"2021-07-23T17:53:29.011775Z\",\"iopub.status.idle\":\"2021-07-23T17:53:30.702991Z\",\"shell.execute_reply.started\":\"2021-07-23T17:53:29.011742Z\",\"shell.execute_reply\":\"2021-07-23T17:53:30.701888Z\"}}\ni = 1\nfor path in paths[0:4]:\n    plt.subplot(2, 2, i)\n    img = imread(path)\n    plt.imshow(img)\n    plt.ylabel(predict(path))\n    i += 1\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T17:53:50.888751Z\",\"iopub.execute_input\":\"2021-07-23T17:53:50.889234Z\",\"iopub.status.idle\":\"2021-07-23T17:53:53.011240Z\",\"shell.execute_reply.started\":\"2021-07-23T17:53:50.889200Z\",\"shell.execute_reply\":\"2021-07-23T17:53:53.010035Z\"}}\ni = 1\nfor path in paths[4:8]:\n    plt.subplot(2, 2, i)\n    img = imread(path)\n    plt.imshow(img)\n    plt.ylabel(predict(path))\n    i += 1\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T17:54:07.343819Z\",\"iopub.execute_input\":\"2021-07-23T17:54:07.344245Z\",\"iopub.status.idle\":\"2021-07-23T17:54:09.016351Z\",\"shell.execute_reply.started\":\"2021-07-23T17:54:07.344213Z\",\"shell.execute_reply\":\"2021-07-23T17:54:09.015259Z\"}}\ni = 1\nfor path in paths[8:12]:\n    plt.subplot(2, 2, i)\n    img = imread(path)\n    plt.imshow(img)\n    plt.ylabel(predict(path))\n    i += 1\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T17:54:21.886658Z\",\"iopub.execute_input\":\"2021-07-23T17:54:21.887022Z\",\"iopub.status.idle\":\"2021-07-23T17:54:23.829561Z\",\"shell.execute_reply.started\":\"2021-07-23T17:54:21.886989Z\",\"shell.execute_reply\":\"2021-07-23T17:54:23.828409Z\"}}\ni = 1\nfor path in paths[12:16]:\n    plt.subplot(2, 2, i)\n    img = imread(path)\n    plt.imshow(img)\n    plt.ylabel(predict(path))\n    i += 1\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-07-23T17:54:32.956011Z\",\"iopub.execute_input\":\"2021-07-23T17:54:32.956381Z\",\"iopub.status.idle\":\"2021-07-23T17:54:34.921365Z\",\"shell.execute_reply.started\":\"2021-07-23T17:54:32.956344Z\",\"shell.execute_reply\":\"2021-07-23T17:54:34.920272Z\"}}\ni = 1\nfor path in paths[16:20]:\n    plt.subplot(2, 2, i)\n    img = imread(path)\n    plt.imshow(img)\n    plt.ylabel(predict(path))\n    i += 1\n\n# %% [code]\n","metadata":{"_uuid":"96129920-41f9-47a4-9563-bf9d76138e3f","_cell_guid":"7eafa552-e128-40c1-a487-2a132c591983","collapsed":false,"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]}]}